from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import pandas as pd
from io import StringIO

# 웹 드라이버 설정 (예: Chrome)
driver = webdriver.Chrome()

try:
    # URL로 이동
    url = "https://comp.fnguide.com/SVO2/ASP/SVD_Report_Summary.asp"
    driver.get(url)

    # 시작 날짜 설정
    start_date = WebDriverWait(driver, 5).until(
        EC.element_to_be_clickable((By.ID, "inFromDate"))
    )
    start_date.click()

    # 월 드롭다운을 찾아서 Jan 선택
    month_dropdown = WebDriverWait(driver, 5).until(
        EC.element_to_be_clickable((By.CLASS_NAME, "ui-datepicker-month"))
    )
    month_dropdown.click()

    # 1월(Jan) 선택
    jan_option = driver.find_element(By.XPATH, "//select[@class='ui-datepicker-month']/option[@value='0']")
    jan_option.click()

    # 날짜 1일 선택
    day_one = WebDriverWait(driver, 5).until(
        EC.element_to_be_clickable((By.XPATH, "//td[@data-month='0' and @data-year='2024']/a[text()='1']"))
    )
    day_one.click()

    # 끝 날짜 설정
    end_date = WebDriverWait(driver, 5).until(
        EC.element_to_be_clickable((By.ID, "inToDate"))
    )
    end_date.click()

    # 월 드롭다운을 찾아서 Jan 선택
    month_dropdown = WebDriverWait(driver, 5).until(
        EC.element_to_be_clickable((By.CLASS_NAME, "ui-datepicker-month"))
    )
    month_dropdown.click()

    # 1월(Jan) 선택
    jan_option = driver.find_element(By.XPATH, "//select[@class='ui-datepicker-month']/option[@value='0']")
    jan_option.click()

    # 날짜 3일 선택
    day_three = WebDriverWait(driver, 5).until(
        EC.element_to_be_clickable((By.XPATH, "//td[@data-month='0' and @data-year='2024']/a[text()='3']"))
    )
    day_three.click()

    # 조회 버튼 클릭
    search_button = WebDriverWait(driver, 5).until(
        EC.element_to_be_clickable((By.ID, "btnSearch"))
    )
    search_button.click()

    # 테이블 로드 대기 및 첫 번째 테이블 가져오기
    table = WebDriverWait(driver, 5).until(
        EC.presence_of_element_located((By.TAG_NAME, "table"))
    )
    table_html = table.get_attribute("outerHTML")
    df = pd.read_html(StringIO(table_html))[0]

    # 데이터프레임 확인
    print(df)

except Exception as e:
    print("오류 발생:", e)

finally:
    # 브라우저 종료
    driver.quit()
